{"version":3,"file":"static/js/882.e7f86de0.chunk.js","mappings":"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","sources":["webpack://react-homework/./src/components/PhonebookEditor/PhonebookEditor.module.css?1c13","components/PhonebookEditor/PhonebookEditor.jsx","webpack://react-homework/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","webpack://react-homework/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhonebookEditor_form__Rd9EJ\",\"label\":\"PhonebookEditor_label__TwSJn\",\"input_name\":\"PhonebookEditor_input_name__1wGHz\",\"input_error\":\"PhonebookEditor_input_error__GQyoS\",\"input_tel\":\"PhonebookEditor_input_tel__vKnC9\",\"customInputStyle\":\"PhonebookEditor_customInputStyle__Q6TDX\",\"button\":\"PhonebookEditor_button__UpRCk\"};","import { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as yup from 'yup'\r\nimport css from './PhonebookEditor.module.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport 'react-phone-number-input/style.css'\r\n\r\n\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required(),\r\n    number: yup.number().typeError('enter a number').required(),\r\n})\r\n        \r\nconst initialValues = {\r\n    name: '',\r\n    number: '',\r\n}\r\n\r\n\r\n\r\n\r\nfunction PhonebookEditor({handleSubmit}) { \r\n       \r\n        return (\r\n            <>\r\n                <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={schema}>\r\n                    <Form className={css.form} autoComplete='off'>\r\n                        <label className={css.label} htmlFor=\"Name\">\r\n                            Name\r\n                            <Field className={css.input_name} type=\"text\" placeholder=\"Enter name\" name=\"name\" required />\r\n                            <ErrorMessage className={css.input_error} name=\"name\" component=\"div\"/>\r\n                        </label>\r\n                        <label className={css.label} htmlFor=\"phone\">\r\n                            Number\r\n                            <Field className={css.input_tel} type=\"tel\" placeholder=\"Enter phone number\" name=\"number\" required>\r\n                                 {({ field }) => (\r\n                                <div  className={css.customInputStyle}>\r\n                                        <PhoneInput\r\n\r\n                                    \r\n                                    {...field}\r\n                                    placeholder=\"Enter phone number\"\r\n                                    value={field.value}\r\n                                    onChange={(value) => field.onChange({ target: { name: field.name, value } })}\r\n                                    />\r\n                                    <ErrorMessage name=\"phoneNumber\" component=\"div\" className=\"error\" />\r\n                                </div>\r\n                                )}\r\n\r\n                            </Field>\r\n                            <ErrorMessage className={css.input_error} name=\"number\" component=\"div\"/>\r\n                        </label>\r\n                        <button className={css.button} type='submit'>Add contact</button>\r\n                    </Form>\r\n\r\n                </Formik>\r\n                \r\n               \r\n\r\n                \r\n                \r\n            </>\r\n        )\r\n    }\r\n\r\nexport default PhonebookEditor","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__ogxaZ\",\"list_line\":\"Contacts_list_line__4A1z+\",\"list_button\":\"Contacts_list_button__s+mUK\",\"title\":\"Contacts_title__6urqx\"};","import css from './Contacts.module.css'\r\n\r\nexport default function Contacts({ contacts, hendleDelete }) {\r\n\r\n  return (\r\n    <>\r\n      <h2 className={css.title}>Contacts</h2>\r\n      <ul className={css.list}>\r\n        {contacts.map((contact) => {\r\n          return <li className={css.list_line} key={contact.id}>\r\n                    <b>{contact.name}:</b> {contact.number}\r\n                    <button className={css.list_button}  type=\"button\" onClick={() => hendleDelete(contact.id)}>delete</button>\r\n                  </li>\r\n        })}       \r\n      </ul>\r\n    </>\r\n        \r\n\r\n  )\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__mjBPV\"};","import css from './Filter.module.css'\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  \r\n  return (\r\n    <div className={css.filter}>\r\n        <label  htmlFor=\"\">\r\n         Find contacts by name   <input type=\"text\" value={value} onChange={onChange} />  \r\n        </label>\r\n    </div>\r\n        \r\n\r\n  )\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Phonebook_phonebook__OVPM0\",\"title\":\"Phonebook_title__9CNpv\"};","import { useSelector, useDispatch } from 'react-redux'\r\nimport PhonebookEditor from 'components/PhonebookEditor/PhonebookEditor'\r\nimport Contacts from 'components/Contacts/Contacts'\r\nimport Filter from '../Filter/Filter'\r\nimport css from './Phonebook.module.css'\r\nimport{filterChange} from 'components/redux/filterSlice'\r\nimport React, { useEffect } from 'react'\r\nimport { addContact, deleteContact, fetchContacts } from 'fetch/fetchContacts'\r\n\r\n\r\nconst Phonebook = React.memo(() => {\r\n\r\n  const contactsState = useSelector((state) => state.contacts);\r\n  const filter = useSelector((state) => state.filter)\r\n  const dispatch = useDispatch();\r\n\r\n  const { contacts } = contactsState;   // destructuring state\r\n  // const { items, isLoading, error } = contacts;\r\n\r\n  useEffect(() => {\r\n   \r\n    dispatch(fetchContacts());\r\n     \r\n  }, [dispatch]);\r\n\r\n  \r\n\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n      \r\n    const contact = { ...values }\r\n    \r\n\r\n        \r\n\r\n      if (contacts.items.find(contactState => contactState.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase())) {\r\n        alert(`${contact.name} is already in contacts.`)\r\n        return\r\n    }\r\n    \r\n    const newContact = {\r\n      name: contact.name,\r\n      number: contact.number,\r\n};\r\n\r\n\r\n    dispatch(addContact(newContact));\r\n\r\n      resetForm();\r\n\r\n    }\r\n    \r\n    const hendleDelete = (id) => {\r\n      \r\n      dispatch(deleteContact(id));\r\n    \r\n   \r\n   \r\n  }\r\n\r\n  const changeFilter = (evt) => {\r\n    dispatch(filterChange(evt.currentTarget.value))\r\n    \r\n  }\r\n\r\n\r\n \r\n  const normslizedFilter = filter.toLocaleLowerCase()\r\n  const visibileContakt = contacts.items.filter(contact => contact.name.toLowerCase().includes(normslizedFilter))\r\n\r\n  \r\n\r\n\r\n  return (\r\n        \r\n      <div className={css.phonebook}>\r\n        <h1 className={css.title}>Phonebook</h1>\r\n        <PhonebookEditor handleSubmit={handleSubmit}/>\r\n        \r\n        <Filter  value={filter} onChange={changeFilter}/>\r\n        { <Contacts  contacts={visibileContakt} hendleDelete={hendleDelete}/>}\r\n        \r\n      </div>\r\n\r\n    )\r\n  \r\n\r\n\r\n  \r\n}) \r\n\r\n\r\n\r\nexport default Phonebook\r\n\r\n","// import Contacts from 'components/Contacts/Contacts'\r\n\r\nimport Phonebook from \"components/Phonebook/Phonebook\";\r\n\r\nexport default function ContactsPage() {\r\n\r\n  return (\r\n    <>\r\n      <Phonebook></Phonebook>\r\n    \r\n    </>\r\n        \r\n\r\n  )\r\n};"],"names":["schema","yup","shape","name","required","number","typeError","initialValues","_ref","handleSubmit","_jsx","_Fragment","children","Formik","onSubmit","validationSchema","_jsxs","Form","className","css","autoComplete","htmlFor","Field","type","placeholder","ErrorMessage","component","_ref2","field","PhoneInput","_objectSpread","value","onChange","target","Contacts","contacts","hendleDelete","map","contact","onClick","id","Filter","React","contactsState","useSelector","state","filter","dispatch","useDispatch","useEffect","fetchContacts","normslizedFilter","toLocaleLowerCase","visibileContakt","items","toLowerCase","includes","PhonebookEditor","values","resetForm","find","contactState","alert","concat","newContact","addContact","evt","filterChange","currentTarget","deleteContact","ContactsPage","Phonebook"],"sourceRoot":""}